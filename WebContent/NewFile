<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
    <%@ page import ="java.util.Date" %>
<%@ page import ="java.text.SimpleDateFormat"%>
<%@ page import="java.sql.*" %>

<%
String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
String DB_URL = "jdbc:mysql:///weather";
String USER = "root";
String PASS = "mani17";
Connection conn = null;
Statement stmt = null;
try
{
	Class.forName(JDBC_DRIVER);
	conn=DriverManager.getConnection(DB_URL,USER,PASS);
	System.out.println("----Database connected To WEATHER----");
	
	String wetemp;
	
	
           
            stmt=conn.createStatement();
        	String sql="SELECT * FROM weathervalue";
        	ResultSet rs = stmt.executeQuery(sql);
        	
        	while(rs.next())
            {
        		
        		String datetime=rs.getString("datetime");
        		String date,time;
        		date=datetime.substring(0,11);
        		time=datetime.substring(12,19);
        		
        		String raining=rs.getString("raining");
        		String rain=raining;
        		System.out.println(rain);
        		
        		System.out.println(datetime);
        		
        		String soilmoisture=rs.getString("soilmoisture");
        		 String soil=soilmoisture;
        		 
        		 
        		 
        		 
        	%>
<html>
<title> Hi THIS IS WEATHERSENSE PRIJECT</title>
<head>
</head>

<body>  

<div id="Wid" style="font-size:35px;color:#00aaff;text-shadow:2px 2px 2px blue;
border:0 width:600px; height:40px"><b>WELCOME TO MY PROJECT</b>  </div>

<br><br>
<table>
<tr>
<td>
    <td width=450px><div id="date" style="font-size:22px;color:#00aaff;text-shadow:2px 2px 2px blue;
border:3px groove blue; width:280px; height:40px"><b>&nbsp;DATE:&nbsp;<%=date %></b>  </div>
 
 <td width=450px><div id="time" style="font-size:22px;color:#00aaff;text-shadow:2px 2px 2px blue;
border:3px groove blue; width:220px; height:40px"><b>&nbsp;TIME:&nbsp;<%=time %> </b></div></td>

<td width=450px><div id="rain" style="font-size:25px;color:#00aaff;text-shadow:2px 2px 2px blue;
border:3px groove pink; width:250px; height:40px"><b>&nbsp;RAINING:&nbsp;<%=rain %></b>  </div>

<td width=450px><div id="soil" style="font-size:25px;color:#00aaff;text-shadow:2px 2px 2px blue;
border:3px groove pink; width:350px; height:40px"><b>&nbsp;SOILMOISTURE:&nbsp;<%=soil %></b>  </div>
</td>

</tr>

</table>

<%
String a="YES";
if(a.equals(rain))
		{
	      
%>


<div><canvas id="cloud" width="412" height="300"></canvas>
	<canvas id="canvas1" width="400" height="200"></canvas> </div>
	<br>


<script>
var canvas = document.getElementById("cloud");
var context = canvas.getContext('2d');
context.beginPath();
context.moveTo(170, 80);
context.bezierCurveTo(130, 100, 130, 150, 230, 150);
context.bezierCurveTo(250, 180, 320, 180, 340, 150);
context.bezierCurveTo(420, 150, 420, 120, 390, 100);
context.bezierCurveTo(430, 40, 370, 30, 340, 50);
context.bezierCurveTo(320, 5, 250, 20, 250, 50);
context.bezierCurveTo(200, 5, 150, 20, 170, 80);
context.closePath();
context.lineWidth = 5;
context.strokeStyle = 'blue';
context.stroke();


var c = document.getElementById('canvas1'),
ctx = c.getContext('2d');

function animate() {
requestAnimationFrame(animate);
draw();
}

//Draws each piece in order: background, raindrops, then animates the drops.
function draw() {  
drawBackground();
renderEntities();
updateEntities();
}

function drawBackground() {
	ctx.fillStyle = 'white';
ctx.fillRect(0,0,500,500);

}

//create a RainDrop object
var RainDrop = function() {
this.x= (Math.random()*500);
this.y= -Math.random()*500;
this.linearOptions = [3,4,5,6,7,8];
this.linearSpeed= this.newSpeed();
this.fillColors= ['#66ccff', '#7CA3F3', '#176FF1'];
this.fill = this.fillColors[Math.round(Math.random()*2)]
};

//draw each raindrop with the following specs
RainDrop.prototype.render = function() {
ctx.fillStyle = this.fill;
ctx.beginPath();
ctx.arc(this.x, this.y,8,0*Math.PI,1*Math.PI);
ctx.lineTo(this.x, this.y-20);
ctx.lineTo(this.x+8, this.y);
ctx.closePath();
ctx.fill();
}

//create a random starting speed for each drop
RainDrop.prototype.newSpeed = function() {
var startSpeed = this.linearOptions[Math.round(Math.random()*5)];
return startSpeed;
}

//update the movement of each drop and resets the location if the drop hits the umbrella or reaches the bottom.
RainDrop.prototype.update = function() {
if(this.y > 500 || ((this.x > 290 && this.x < 480) && this.y > 300)) {
this.y = 0;
this.x = (Math.random()*500)+50;
this.linearSpeed = this.newSpeed();
}
this.y += this.linearSpeed;
}

//create a bunch of new RainDrops and push it into an array.

var rainVolume = 19;
var allDrops =[];

for(var i=0; i< rainVolume; i++) {
allDrops.push(new RainDrop());
}





function renderEntities() {
allDrops.forEach(function(raindrop) {
raindrop.render();
});
}

function updateEntities() {
allDrops.forEach(function(raindrop) {
raindrop.update();
});
}

function drawUmbrella() {
//handle
ctx.strokeStyle="#A55A33";
ctx.lineWidth="15";
ctx.beginPath();
ctx.moveTo(390, 390);
ctx.lineTo(350, 460);
ctx.arc(330,450,30,0.4*Math.PI, -0.9*Math.PI);
ctx.stroke();

//umbrella top
ctx.fillStyle = '#A86CF6';
ctx.beginPath();
ctx.arc(380, 400,100,-0.9*Math.PI,0.08*Math.PI);
ctx.fill();
ctx.save();
ctx.clip();

//circles that cut out the bottom of the umbrella
ctx.fillStyle="#FFFDF7";
ctx.beginPath();
ctx.arc(305,390,30,0*Math.PI,2*Math.PI);
ctx.fill();

ctx.beginPath();
ctx.arc(358,405,30,1.9*Math.PI,1.87*Math.PI);
ctx.fill();

ctx.beginPath();
ctx.arc(410,422,30,-.74*Math.PI,-1.9*Math.PI);
ctx.fill();

ctx.beginPath();
ctx.arc(458,438,30,0*Math.PI,2*Math.PI);
ctx.fill();
ctx.closePath();
ctx.restore();  
}

animate();


</script>

	 	
	 	
	 	
	 	
	 	
        	
        	<%
		}
else
{
	
}
%>


<% 
			break;	}
					}
            

          
				catch(Exception e)
				{
      
    				  e.printStackTrace();
				}

    
 
 					System.out.println("Goodbye!");

            
            %>

 <div>
 
 
 <%@include file="weatherDataGraph.jsp" %>
 


            </div>
</body>

</html>
